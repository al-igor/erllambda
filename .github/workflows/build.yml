name: erllambda_dummy_build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  issue_comment:
    types: [ created ]

env:
  GITHUB_WORKFLOW_URL: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

jobs:
  
  build:
    runs-on: ubuntu-latest
    container:
      image: erlang:22.0.7

    steps:
    - uses: actions/checkout@v2

    - name: Compile
      run: make compile
   
    - name: Run tests
      run: make test

    - name: Show bins
      run: ls -lt . ; ls -lt ./_build/ ; ls -lt ./test/ ; cat test.txt ;

      #    - name: Fail trigger
      #run: exit13 # full stop

    - name: Microsoft Teams Notification
      uses: dhollerbach/github-action-send-message-to-ms-teams@1.0.10
      if: always()
      with:
        webhook: ${{ secrets.TEAMS_WEBHOOK }}
        message: ' Job ${{ github.workflow }} | ${{ github.run_number }}: ${{ job.status }} Notification: ${{github.event.pusher.name}} have pushed something. ${{env.GITHUB_WORKFLOW_URL}}'

  deploy:
    needs: [build]
    
    runs-on: ubuntu-latest
    container:
      image: docker:latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::407242342205:role/centralized-users
        role-duration-seconds: 1200
        role-skip-session-tagging: true

    - name: aws-ssm-to-env
      uses: bomb-on/aws-ssm-to-env@master
      with:
        ssm_parameter_list: |
         /ci_params/_global/MYVAR2,
         /alertlogic/ci-test-repo/HELLO_WORLD,
        prefix: ALGA_ 
  
    - uses: Bardavon-Health/actions-aws-ssm-params-to-env@v1.2
      with:
        ssm-path: /ci/env_vars/1234/access_key_id # "mynewpassword"
        prefix: ALGA_ # optional
        decryption: true # optional, default false
 
    - name: Printenv
      run: printenv | grep ALGA  

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - uses: actions/download-artifact@v2

    - name: Display structure of downloaded files
      run: ls -lt

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        ls -lt

